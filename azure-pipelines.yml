# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'

steps:
- script: dotnet build --configuration $(buildConfiguration)
  displayName: 'dotnet build $(buildConfiguration)'

- task: VSTest@2
  inputs:
    testSelector: 'testAssemblies'
    testAssemblyVer2: |
     **\*tests.dll
     !**\obj\**
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    searchFolder: '$(System.DefaultWorkingDirectory)'
    codeCoverageEnabled: true
    diagnosticsEnabled: true

# - script: dotnet test ProductRestAPI.Tests/ProductRestAPI.Tests.csproj --logger "trx;LogFileName=testresults.trx" /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=TestResults/Coverage/
#   displayName: 'dotnet test'

# - script: dotnet reportgenerator "-reports:$(Build.SourcesDirectory)/TestResults/Coverage/coverage.cobertura.xml" "-targetDir:$(Build.SourcesDirectory)/TestResults/Coverage/Reports" -tag:$(Build.BuildNumber) -reportTypes:htmlInline
#   workingDirectory: $(Build.SourcesDirectory)/ProductRestAPI.Tests
#   displayName: 'dotnet reportgenerator'

# - task: PublishTestResults@2
#   inputs:
#     testRunner: VSTest
#     testResultsFiles: '**/*.trx'
#     failTaskOnFailedTests: true

# - task: PublishCodeCoverageResults@1
#   inputs:
#     codeCoverageTool: 'cobertura'
#     summaryFileLocation: $(Build.SourcesDirectory)/TestResults/Coverage/**/coverage.cobertura.xml
#     reportDirectory: $(Build.SourcesDirectory)/TestResults/Coverage/Reports
#     failIfCoverageEmpty: false 

- task: DotNetCoreCLI@2
  inputs:
    command: publish
    publishWebProjects: True
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: True
      
- task: PublishBuildArtifacts@1
  displayName: 'public artifacts'
  inputs: 
    pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
